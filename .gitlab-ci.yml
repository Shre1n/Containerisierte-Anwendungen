stages:
  - lint_client
  - lint_server
  - client
  - server
  - server_start
  - performance_test
  - security_scan_client
  - security_scan_server

eslint_client:
  stage: lint_client
  tags:
    - docker
  image: node:lts-bullseye-slim
  allow_failure: true
  before_script:
    - cd client
  script:
    - npm install
    - npm run lint

eslint_server:
  stage: lint_server
  tags:
    - docker
  image: node:lts-bullseye-slim
  allow_failure: true
  before_script:
    - cd server
  script:
    - npm install
    - npm run lint

frontend:
  stage: client
  tags:
    - kaniko
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  variables:
    IMAGE_TAG: latest
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context "$CI_PROJECT_DIR/client" --dockerfile "$CI_PROJECT_DIR/client/Dockerfile" --destination "$CI_REGISTRY_IMAGE:client"

backend:
  stage: server
  tags:
    - kaniko
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  variables:
    IMAGE_TAG: latest
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context "$CI_PROJECT_DIR/server" --dockerfile "$CI_PROJECT_DIR/server/Dockerfile" --destination "$CI_REGISTRY_IMAGE:server"
  needs: [ "frontend" ]

security_scan_client:
  stage: security_scan_client
  tags:
    - docker
  image: node:lts-bullseye-slim
  allow_failure: true
  before_script:
    - cd client
  script:
    - npm install
    - npm install -g npm-check
    - npm-check --skip-unused

security_scan_server:
  stage: security_scan_server
  tags:
    - docker
  image: node:lts-bullseye-slim
  allow_failure: true
  before_script:
    - cd server
  script:
    - npm install
    - npm install -g npm-check
    - npm-check --skip-unused
